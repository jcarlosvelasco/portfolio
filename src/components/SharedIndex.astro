---
import { Image } from 'astro:assets';
import linkedin_dark from '../assets/linkedin_darkMode.svg';
import linkedin_white from '../assets/linkedin_whiteMode.svg';
import Layout from '../layouts/Layout.astro';
import { skillItems } from '../utils';
import ProjectCard from './ProjectCard.astro';
import Skill from './Skill.astro';
import ThemeIcon from './ThemeIcon.astro';
import Timeline from './Timeline.astro';
import Heading from './Heading.astro';
import { getCollection } from 'astro:content';

const { lang, t, months } = Astro.props;

function getMonth(monthNumber: number): string {
    return months[monthNumber];
}

const [educationItems, experienceItems, projectItems] = await Promise.all([
    getCollection('education', ({id}) => id.startsWith(lang)).then((items) => {
        return items.sort((a, b) => b.data.startingDate.getTime() - a.data.startingDate.getTime());
    }),
    getCollection('experience', ({id}) => id.startsWith(lang)).then((items) => {
        return items.sort((a, b) => b.data.startingDate.getTime() - a.data.startingDate.getTime());
    }),
    getCollection('projects', ({id}) => id.startsWith(lang))
]);

const translations = {
    actualJob: t("actualJob")
};
---

<Layout>
    <div class="flex flex-col items-center w-full">
        <div class="max-w-3xl pt-8 pb-16 px-8 md:px-0 w-full">
            <div class="flex flex-row items-center mb-16 justify-between w-full">
                <div class="flex flex-row gap-4 items-center">
                    <ThemeIcon/>
                    <a href="https://www.linkedin.com/in/jcarlosvelasco">
                        <Image loading={'eager'} src={linkedin_white} class="w-8 dark:hidden" alt="LinkedIn logo"/>
                        <Image loading={'eager'} src={linkedin_dark} class="w-8 hidden dark:block" alt="LinkedIn logo"/>
                    </a>
                    {
                        lang === 'es' ? <a href="/en">English</a> : <a href="/es">Espa√±ol</a>
                    }
                </div>
            </div>
            <h1 class="font-bold text-4xl mb-2">{t('nav.hero')}</h1>
            <h2 class="mb-12 sm:mb-16">{t('nav.heading')}</h2>
            
            <Heading title={t("nav.experience")}/>
            <Timeline items={experienceItems} getMonth={getMonth} fullTime={false} t={translations.actualJob}/>
            
            <Heading title={t("nav.education")}/>
            <Timeline items={educationItems} getMonth={getMonth} fullTime={true}/>

            <Heading title={t("nav.skills")}/>
            <div class="flex flex-row flex-wrap gap-2 mb-12 sm:mb-16">
                {
                    skillItems.map((item: string) => (
                        <Skill name={item}/>
                    ))
                }
            </div>

            <Heading title={t("nav.projects")}/>
            <div class="flex flex-row flex-wrap gap-4">
                {
                    projectItems.map((item: any) => (
                        <ProjectCard 
                            projectName={item.data.projectName} 
                            githubLink={item.data.githubLink}
                            tecnologies={item.data.tecnologies}
                            frameworkImage={item.data.frameworkImage}
                            frameworkLink={item.data.frameworkLink}
                            frameworkAlt={item.data.frameworkAlt}
                            description={item.data.description}
                        />
                    ))
                }
            </div>
        </div>	
    </div>
</Layout>

<style>
    html.dark {
        background-color: #1d1d1d;
        color: #fff;
    }

    html {
        background-color: #fff;
        color: black;
    }

    .dark .nav-links a {
        color: #fff;
    }

    .overflow-x-scroll {
        overflow-x: auto;
    }
</style>